#Architecture Diagram

## Scaffolding


## Ratholes:
- Trying to define each and every potential business logic of the system
    - This requires too many assumptions about user preferences
    - This assumes a singular set of preferences across user groups
- Trying to design higher-level analytics functionality (see dependency)
- Rulemaking and savings pool governance
    - We donâ€™t have sufficient data about the explicit and implicit rules by which savings groups are governed
    - Different groups may have different governance norms; the degree of variance here will determine how flexible the rulemaking feature should be
- Trying to solve multiple use cases
    - There can be many potential benefits to formalizing informal savings pools, however, the core premise that users will adopt a formal structure for savings groups needs to be validated
    - As a hypothesis, we will focus on a single use case: emergency disbursements from the savings pool to smoothen income shocks to a single member

## Dependencies:
- Higher-level analytics depend on having collected data from multiple user groups
    - Avoid this rathole
- Lack of real user data
    - Use dummy data based on [initial research findings]()
- Rules and governance
    - Identify one loosely defined set of governance rules for prototype
    - Single-leader model, core functionality (use case) will be for emergency disbursements
- Emergency disbursements use case
    - Take ordered disbursements as a given
    - Use fixed value as a percentage, based on initial research findings

## Core technology:
- Ledger system and interface
    - How will pay-ins and pay-outs be recorded in the system
    - What information will be displayed to each type of user (leader vs. group members) through the interface
    - Sample business logic (back end) to capture use case of emergency disbursements
